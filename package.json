{
  "name": "async-iterator-to-stream",
  "version": "1.1.0",
  "license": "ISC",
  "description": "Convert an async iterator/iterable to a readable stream",
  "keywords": [
    "async",
    "generator",
    "iterable",
    "iteration",
    "iterator",
    "promise",
    "readable",
    "stream"
  ],
  "homepage": "https://github.com/JsCommunity/async-iterator-to-stream",
  "bugs": "https://github.com/JsCommunity/async-iterator-to-stream/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/JsCommunity/async-iterator-to-stream.git"
  },
  "preferGlobal": false,
  "main": "dist/",
  "bin": {},
  "files": [
    "dist/"
  ],
  "engines": {
    "node": ">=6"
  },
  "dependencies": {
    "readable-stream": "^3.0.5"
  },
  "devDependencies": {
    "@babel/cli": "^7.1.2",
    "@babel/core": "^7.1.2",
    "@babel/preset-env": "^7.1.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.2.0",
    "babel-plugin-lodash": "^3.3.2",
    "cross-env": "^5.1.4",
    "eslint": "^5.9.0",
    "eslint-config-prettier": "^3.3.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-node": "^7.0.1",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-standard": "^4.0.0",
    "husky": "^1.1.0",
    "jest": "^23.3.0",
    "prettier": "^1.15.2",
    "rimraf": "^2.6.2"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel --source-maps --out-dir=dist/ src/",
    "clean": "rimraf dist/",
    "dev": "cross-env NODE_ENV=development babel --watch --source-maps --out-dir=dist/ src/",
    "dev-test": "jest --bail --watch",
    "prebuild": "npm run clean",
    "predev": "npm run prebuild",
    "prepublishOnly": "npm run build",
    "pretest": "eslint --ignore-path .gitignore .",
    "test": "jest"
  },
  "husky": {
    "hooks": {
      "commit-msg": "npm test"
    }
  },
  "jest": {
    "collectCoverage": true,
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src"
    ],
    "testRegex": "\\.spec\\.js$"
  }
}
